

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>jyp_devlog</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2023-08-12T14:11:47+09:00</updated>
  <author>
    <name>1221jyp</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 1221jyp </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>퀴즈 사이트 만들기_4 (next.js)</title>
    <link href="http://localhost:4000/posts/Quiz_project_4/" rel="alternate" type="text/html" title="퀴즈 사이트 만들기_4 (next.js)" />
    <published>2023-08-11T11:33:00+09:00</published>
  
    <updated>2023-08-11T11:33:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Quiz_project_4/</id>
    <content src="http://localhost:4000/posts/Quiz_project_4/" />
    <author>
      <name>jyp</name>
    </author>

  
    
    <category term="MacOs" />
    
    <category term="Next.js" />
    
    <category term="javascript" />
    
  

  
    <summary>
      





      시작하며

지난 시간에는 퀴즈 풀기 페이지, 회원기능 , DB를 이용한 회원아이디 저장 등의 기능을 만들었다.
이번 시간에는 순위판 페이지를 완성시키고, AWS에 파일을 업로드할 것이다.

순위판 구성



순위가 높은 순서대로 자료를 출력하기 위해 mongodb에서 데이터를 가져올때, sort()함수를 이용합니다.
sort함수를 사용하면 특정 자료의 값에 따라 오름차순/내림차순의 순서대로 가져올 수 있게 해줍니다.
저는 result값 (점수)가 높은 순서대로 자료를 출력하게 했습니다.

import { connectDB } from "/Users/jyp/Documents/GitHub/quiz_project/src/util/db.js";
import "./style.css";

export defaul...
    </summary>
  

  </entry>

  
  <entry>
    <title>퀴즈 사이트 만들기_3 (next.js)</title>
    <link href="http://localhost:4000/posts/Quiz_project_3/" rel="alternate" type="text/html" title="퀴즈 사이트 만들기_3 (next.js)" />
    <published>2023-08-02T11:33:00+09:00</published>
  
    <updated>2023-08-02T11:33:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Quiz_project_3/</id>
    <content src="http://localhost:4000/posts/Quiz_project_3/" />
    <author>
      <name>jyp</name>
    </author>

  
    
    <category term="MacOs" />
    
    <category term="Next.js" />
    
    <category term="javascript" />
    
  

  
    <summary>
      





      시작하며



지난 포스팅에서는 퀴즈 만들기 페이지와, API까지 완성시켰다. 이번 포스팅에서는
퀴즈 풀기 기능을 완성시켜볼 예정이다.

퀴즈 풀기 페이지 구성하기



페이지 구성

가장 먼저 퀴즈 풀기 버튼을 누르면, 문제의 카테고리를 선택할 수 있는 창을 만들어주겠습니다.
아직 한국사 문제밖에 없지만, 새로운 카테고리가 생길수도 있기때문에 만들어놓겠습니다.

//src/app/quiz/page.js

import "./style.css";

export default function Quiz() {
  return (
    &amp;lt;div className="container"&amp;gt;
      &amp;lt;a href={"/quiz_h"} className="button"&amp;gt;
        한국사...
    </summary>
  

  </entry>

  
  <entry>
    <title>퀴즈 사이트 만들기_2 (next.js)</title>
    <link href="http://localhost:4000/posts/Quiz_project_2/" rel="alternate" type="text/html" title="퀴즈 사이트 만들기_2 (next.js)" />
    <published>2023-07-30T11:33:00+09:00</published>
  
    <updated>2023-08-12T01:25:43+09:00</updated>
  
    <id>http://localhost:4000/posts/Quiz_project_2/</id>
    <content src="http://localhost:4000/posts/Quiz_project_2/" />
    <author>
      <name>jyp</name>
    </author>

  
    
    <category term="MacOs" />
    
    <category term="Next.js" />
    
    <category term="javascript" />
    
  

  
    <summary>
      





      

시작하며



지난 포스팅에서는 next.js를 설치하고, 레이아웃까지 제작하였다. 이번 포스팅에서는
나머지 페이지들의 내용을 구성해볼것이다.


  저의 모든 글은 MacOs silicon을 기준으로 작성됩니다.


메인 페이지 구성



메인 페이지에는 이 웹사이트에 있는 기능들과 사용법을 소개할 것입니다.
아직 저의 프로젝트는 완성되어있지 않고, 계속 수정될 수 있기 때문에 비워놓고 다른 페이지부터
제작하겠습니다.

로딩 페이지 구성



로딩중일때 띄워질 페이지를 구성해 봅시다. app폴더 안에 loading.js파일을 생성하면,
로딩중일때 loading.js파일의 내용을 띄워 줍니다. chatgpt를 사용해서 레이아웃을 로딩 애니메이션을
만들어달라 부탁해보았습니다.

//src/app/lo...
    </summary>
  

  </entry>

  
  <entry>
    <title>퀴즈 사이트 만들기_1 (next.js)</title>
    <link href="http://localhost:4000/posts/Quiz_project_1/" rel="alternate" type="text/html" title="퀴즈 사이트 만들기_1 (next.js)" />
    <published>2023-07-25T11:33:00+09:00</published>
  
    <updated>2023-08-01T23:22:49+09:00</updated>
  
    <id>http://localhost:4000/posts/Quiz_project_1/</id>
    <content src="http://localhost:4000/posts/Quiz_project_1/" />
    <author>
      <name>jyp</name>
    </author>

  
    
    <category term="MacOs" />
    
    <category term="Next.js" />
    
    <category term="javascript" />
    
  

  
    <summary>
      





      


  저의 모든 글은 MacOs silicon을 기준으로 작성됩니다.


시작하며

방학이 찾아온 김에 게으르게 놀지 말고 무언가 하나라도 만들어봐야지 하며 시작하게 되었다.
어떤 프로젝트를 만들면 좋을까 생각하다가, 캬훗과 비슷하지만, 다른 느낌의 퀴즈 사이트를 만들어보기로 결정했다.
카훗은 혼자 퀴즈를 풀 수 없고, 그룹장이 게임을 만들어야만 퀴즈를 풀 수 있다. 나는 혼자서도 퀴즈를 풀 수 있는
사이트를 제작해보면 좋을것 같다는 생각이 들었다.

퀴즈 사이트에 들어갈 기능


  퀴즈를 직접 작성하여 올릴수 있어야 한다.
  퀴즈가 만들어지면 DB에 퀴즈가 저장되고, 퀴즈 풀기를 할때 랜덤으로 유저가 작성해놓은 퀴즈가 나온다.
  한번에 풀 수 있는 퀴즈의 수를 20개로 제한해놓고, 다 풀었을...
    </summary>
  

  </entry>

  
  <entry>
    <title>github 블로그 만들어보기_2 chirpy테마 github업로드오류</title>
    <link href="http://localhost:4000/posts/github-blog_2/" rel="alternate" type="text/html" title="github 블로그 만들어보기_2 chirpy테마 github업로드오류" />
    <published>2023-05-05T11:33:00+09:00</published>
  
    <updated>2023-08-01T23:22:49+09:00</updated>
  
    <id>http://localhost:4000/posts/github-blog_2/</id>
    <content src="http://localhost:4000/posts/github-blog_2/" />
    <author>
      <name>jyp</name>
    </author>

  
    
    <category term="MacOs" />
    
    <category term="github blog" />
    
    <category term="chirpy" />
    
  

  
    <summary>
      





      

들어가며

1편에서 chirpy jekyll 테마를 적용하고 포스팅을 끝냈다.
이제 마지막으로 github에 업로드만 하면 블로그 제작은 끝이 난다.


  저의 모든 글은 MacOs silicon을 기준으로 작성됩니다.


github에 블로그 폴더 업로드

github에 파일을 푸시할때는 보통 터미널,cmd를 이용하거나 github_desktop을 사용하는데,
필자는 github desktop이 편해 github desktop을 사용중이다.

cmd로 파일 푸시

$ cd '자신의 블로그 로컬 폴더 위치'


먼저 자신의 블로그 파일이 있는 폴더를 선택해주고,

$ git init
$ git add .
$ git commit -m "아무 커밋 이름"
$ git remote add origin '...
    </summary>
  

  </entry>

</feed>


